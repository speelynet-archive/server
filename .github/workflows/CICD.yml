name: CI/CD
on:
    push:
        paths:
            - "**.go"
            - go.mod
            - go.sum
            - .github/workflows/CICD.yml

jobs:
    test:
        name: Run tests
        runs-on: ubuntu-latest
        container: nginx/unit:1.28.0-go1.19
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Retrieve dependency cache
              uses: actions/cache@v2
              id: cache
              with:
                  path: ~/go/pkg/mod
                  key: go-${{ hashFiles('go.sum') }}
                  restore-keys: go-
            - name: Install missing dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: go mod download
            - name: Run tests
              run: go test -v --godog.tags=~@wip ./...
    build:
        name: Build executable
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/')
        container: nginx/unit:1.28.0-go1.19
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Retrieve dependency cache
              uses: actions/cache@v2
              id: cache
              with:
                  path: ~/go/pkg/mod
                  key: go-${{ hashFiles('go.sum') }}
                  restore-keys: go-
            - name: Install missing dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: go mod download
            - name: Build executable
              run: go build
            - name: Upload build artifact
              uses: actions/upload-artifact@v2
              with:
                  name: server
                  path: server
    deploy:
        name: Deploy via SSH
        runs-on: ubuntu-latest
        needs: [ test, build ]
        steps:
            - name: Download build artifact
              uses: actions/download-artifact@v2
              with:
                  name: server
            - name: Copy executable to server
              run: |
                  eval `ssh-agent`
                  ssh-add - <<< "${{ secrets.CICDSSH }}"
                  mkdir ~/.ssh
                  ssh-keyscan speely.net >> ~/.ssh/known_hosts
                  ssh github@speely.net sudo systemctl stop unit
                  scp server github@speely.net:~/
                  ssh github@speely.net sudo systemctl start unit

